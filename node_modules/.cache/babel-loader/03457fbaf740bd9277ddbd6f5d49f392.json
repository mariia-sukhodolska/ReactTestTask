{"ast":null,"code":"var _jsxFileName = \"/Users/mariia/Desktop/gitHubTestRepo/react-test-task/src/components/Filters/Search/Search.tsx\";\nimport React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Input, makeStyles } from '@material-ui/core';\nimport SearchIcon from '@material-ui/icons/Search';\nimport IconButton from '@material-ui/core/IconButton';\nimport { loadTVShows } from '../../../store/tvShows/tvShows.actions';\nimport styles from './Search.module.css';\nexport const Search = ({\n  queryString,\n  initialValue = ''\n}) => {\n  const dispatch = useDispatch();\n  const [inputValue, setInputValue] = useState(initialValue);\n\n  const handleInputChange = event => {\n    setInputValue(event.currentTarget.value);\n  };\n\n  const handleSearchClick = () => {\n    dispatch(loadTVShows(inputValue, queryString));\n  };\n\n  const useStyles = makeStyles({\n    input: {\n      width: '120px',\n      fontSize: '14px'\n    }\n  });\n  const classes = useStyles();\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.search,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    value: inputValue,\n    onChange: handleInputChange,\n    classes: {\n      root: classes.input\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(IconButton, {\n    size: 'small',\n    onClick: handleSearchClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(SearchIcon, {\n    fontSize: 'small',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  })));\n};","map":{"version":3,"sources":["/Users/mariia/Desktop/gitHubTestRepo/react-test-task/src/components/Filters/Search/Search.tsx"],"names":["React","useState","useDispatch","Input","makeStyles","SearchIcon","IconButton","loadTVShows","styles","Search","queryString","initialValue","dispatch","inputValue","setInputValue","handleInputChange","event","currentTarget","value","handleSearchClick","useStyles","input","width","fontSize","classes","search","root"],"mappings":";AAAA,OAAOA,KAAP,IAAoCC,QAApC,QAAoD,OAApD;AACA,SAASC,WAAT,QAA4B,aAA5B;AAEA,SAASC,KAAT,EAAgBC,UAAhB,QAAkC,mBAAlC;AACA,OAAOC,UAAP,MAAuB,2BAAvB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,SAASC,WAAT,QAA4B,wCAA5B;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AAOA,OAAO,MAAMC,MAAiB,GAAG,CAAC;AAChCC,EAAAA,WADgC;AAEhCC,EAAAA,YAAY,GAAG;AAFiB,CAAD,KAGpB;AACX,QAAMC,QAAQ,GAAGV,WAAW,EAA5B;AACA,QAAM,CAACW,UAAD,EAAaC,aAAb,IAA8Bb,QAAQ,CAACU,YAAD,CAA5C;;AACA,QAAMI,iBAAiB,GACrBC,KADwB,IAErB;AACHF,IAAAA,aAAa,CAACE,KAAK,CAACC,aAAN,CAAoBC,KAArB,CAAb;AACD,GAJD;;AAKA,QAAMC,iBAAiB,GAAG,MAAM;AAC9BP,IAAAA,QAAQ,CAACL,WAAW,CAACM,UAAD,EAAaH,WAAb,CAAZ,CAAR;AACD,GAFD;;AAIA,QAAMU,SAAS,GAAGhB,UAAU,CAAC;AAC3BiB,IAAAA,KAAK,EAAE;AACLC,MAAAA,KAAK,EAAE,OADF;AAELC,MAAAA,QAAQ,EAAE;AAFL;AADoB,GAAD,CAA5B;AAMA,QAAMC,OAAO,GAAGJ,SAAS,EAAzB;AAEA,sBACE;AAAK,IAAA,SAAS,EAAEZ,MAAM,CAACiB,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AACE,IAAA,KAAK,EAAEZ,UADT;AAEE,IAAA,QAAQ,EAAEE,iBAFZ;AAGE,IAAA,OAAO,EAAE;AAAEW,MAAAA,IAAI,EAAEF,OAAO,CAACH;AAAhB,KAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAME,oBAAC,UAAD;AAAY,IAAA,IAAI,EAAE,OAAlB;AAA2B,IAAA,OAAO,EAAEF,iBAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AAAY,IAAA,QAAQ,EAAE,OAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CANF,CADF;AAYD,CAnCM","sourcesContent":["import React, { FC, SyntheticEvent, useState } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport { Input, makeStyles } from '@material-ui/core';\nimport SearchIcon from '@material-ui/icons/Search';\nimport IconButton from '@material-ui/core/IconButton';\nimport { loadTVShows } from '../../../store/tvShows/tvShows.actions';\nimport styles from './Search.module.css';\n\ninterface Props {\n  queryString: string;\n  initialValue?: string;\n}\n\nexport const Search: FC<Props> = ({\n  queryString,\n  initialValue = ''\n}: Props) => {\n  const dispatch = useDispatch();\n  const [inputValue, setInputValue] = useState(initialValue);\n  const handleInputChange = (\n    event: SyntheticEvent<HTMLInputElement | HTMLTextAreaElement>\n  ) => {\n    setInputValue(event.currentTarget.value);\n  };\n  const handleSearchClick = () => {\n    dispatch(loadTVShows(inputValue, queryString));\n  };\n\n  const useStyles = makeStyles({\n    input: {\n      width: '120px',\n      fontSize: '14px'\n    }\n  });\n  const classes = useStyles();\n\n  return (\n    <div className={styles.search}>\n      <Input\n        value={inputValue}\n        onChange={handleInputChange}\n        classes={{ root: classes.input }}\n      />\n      <IconButton size={'small'} onClick={handleSearchClick}>\n        <SearchIcon fontSize={'small'} />\n      </IconButton>\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}