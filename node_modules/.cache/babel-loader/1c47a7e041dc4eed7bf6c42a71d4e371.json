{"ast":null,"code":"export const setStringValue = value => {\n  if (typeof value === 'string') {\n    return value;\n  }\n\n  return '';\n};\nexport const setNumberValue = value => {\n  if (typeof value === 'number') {\n    return value;\n  }\n\n  return null;\n};\nexport const setArrValue = arr => {\n  if (!Array.isArray(arr)) {\n    return [];\n  }\n\n  return arr;\n};\nexport const sortArrByDirection = (arr, direction, value) => {\n  if (!Array.isArray(arr)) {\n    return [];\n  }\n\n  return direction === 'asc' ? [...arr.sort((a, b) => {\n    if (a[value] > b[value]) {\n      return 1;\n    }\n\n    if (a[value] < b[value]) {\n      return -1;\n    }\n\n    return 0;\n  })] : [...arr.sort((a, b) => {\n    if (a[value] < b[value]) {\n      return 1;\n    }\n\n    if (a[value] > b[value]) {\n      return -1;\n    }\n\n    return 0;\n  })];\n};","map":{"version":3,"sources":["/Users/mariia/Desktop/gitHubTestRepo/react-test-task/src/shared/utils/common.utils.ts"],"names":["setStringValue","value","setNumberValue","setArrValue","arr","Array","isArray","sortArrByDirection","direction","sort","a","b"],"mappings":"AAAA,OAAO,MAAMA,cAAc,GAAGC,KAAK,IAAI;AACrC,MAAI,OAAOA,KAAP,KAAiB,QAArB,EAA+B;AAC7B,WAAOA,KAAP;AACD;;AACD,SAAO,EAAP;AACD,CALM;AAOP,OAAO,MAAMC,cAAc,GAAGD,KAAK,IAAI;AACrC,MAAI,OAAOA,KAAP,KAAiB,QAArB,EAA+B;AAC7B,WAAOA,KAAP;AACD;;AACD,SAAO,IAAP;AACD,CALM;AAOP,OAAO,MAAME,WAAW,GAAGC,GAAG,IAAI;AAChC,MAAI,CAACC,KAAK,CAACC,OAAN,CAAcF,GAAd,CAAL,EAAyB;AACvB,WAAO,EAAP;AACD;;AACD,SAAOA,GAAP;AACD,CALM;AAOP,OAAO,MAAMG,kBAAkB,GAAG,CAChCH,GADgC,EAEhCI,SAFgC,EAGhCP,KAHgC,KAI7B;AACH,MAAI,CAACI,KAAK,CAACC,OAAN,CAAcF,GAAd,CAAL,EAAyB;AACvB,WAAO,EAAP;AACD;;AACD,SAAOI,SAAS,KAAK,KAAd,GACH,CACE,GAAGJ,GAAG,CAACK,IAAJ,CAAS,CAACC,CAAD,EAAIC,CAAJ,KAAU;AACpB,QAAID,CAAC,CAACT,KAAD,CAAD,GAAqBU,CAAC,CAACV,KAAD,CAA1B,EAA6C;AAC3C,aAAO,CAAP;AACD;;AACD,QAAIS,CAAC,CAACT,KAAD,CAAD,GAAqBU,CAAC,CAACV,KAAD,CAA1B,EAA6C;AAC3C,aAAO,CAAC,CAAR;AACD;;AACD,WAAO,CAAP;AACD,GARE,CADL,CADG,GAYH,CACE,GAAGG,GAAG,CAACK,IAAJ,CAAS,CAACC,CAAD,EAAIC,CAAJ,KAAU;AACpB,QAAID,CAAC,CAACT,KAAD,CAAD,GAAqBU,CAAC,CAACV,KAAD,CAA1B,EAA6C;AAC3C,aAAO,CAAP;AACD;;AACD,QAAIS,CAAC,CAACT,KAAD,CAAD,GAAqBU,CAAC,CAACV,KAAD,CAA1B,EAA6C;AAC3C,aAAO,CAAC,CAAR;AACD;;AACD,WAAO,CAAP;AACD,GARE,CADL,CAZJ;AAuBD,CA/BM","sourcesContent":["export const setStringValue = value => {\n  if (typeof value === 'string') {\n    return value;\n  }\n  return '';\n};\n\nexport const setNumberValue = value => {\n  if (typeof value === 'number') {\n    return value;\n  }\n  return null;\n};\n\nexport const setArrValue = arr => {\n  if (!Array.isArray(arr)) {\n    return [];\n  }\n  return arr;\n};\n\nexport const sortArrByDirection = (\n  arr: any[],\n  direction: TV.SortDirection,\n  value: TV.SortKey\n) => {\n  if (!Array.isArray(arr)) {\n    return [];\n  }\n  return direction === 'asc'\n    ? [\n        ...arr.sort((a, b) => {\n          if (a[value as string] > b[value as string]) {\n            return 1;\n          }\n          if (a[value as string] < b[value as string]) {\n            return -1;\n          }\n          return 0;\n        })\n      ]\n    : [\n        ...arr.sort((a, b) => {\n          if (a[value as string] < b[value as string]) {\n            return 1;\n          }\n          if (a[value as string] > b[value as string]) {\n            return -1;\n          }\n          return 0;\n        })\n      ];\n};\n"]},"metadata":{},"sourceType":"module"}