{"ast":null,"code":"var _jsxFileName = \"/Users/mariia/Desktop/gitHubTestRepo/react-test-task/src/components/Table/Table.tsx\";\nimport React from 'react';\nimport { TableContainer, Table as TableMui, TableRow, TableCell, TableBody } from '@material-ui/core';\nimport { TableHead } from './TableHead';\nimport { TableLoader } from './TableLoader';\nexport const Table = ({\n  initialNameValue = '',\n  tableHeader,\n  data,\n  isLoaded,\n  activeSortLabel,\n  onSort\n}) => /*#__PURE__*/React.createElement(TableContainer, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(TableMui, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(TableHead, {\n  tableHeader: tableHeader,\n  activeSortLabel: activeSortLabel,\n  initialNameValue: initialNameValue,\n  onSort: onSort,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 7\n  }\n}), /*#__PURE__*/React.createElement(TableBody, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 7\n  }\n}, !isLoaded ? /*#__PURE__*/React.createElement(TableLoader, {\n  columnCount: Object.keys(tableHeader).length,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 11\n  }\n}) : data.map((cell, index) => {\n  return /*#__PURE__*/React.createElement(TableRow, {\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 15\n    }\n  }, Object.keys(cell).map((elem, index) => /*#__PURE__*/React.createElement(TableCell, {\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 19\n    }\n  }, cell[elem])));\n}))));","map":{"version":3,"sources":["/Users/mariia/Desktop/gitHubTestRepo/react-test-task/src/components/Table/Table.tsx"],"names":["React","TableContainer","Table","TableMui","TableRow","TableCell","TableBody","TableHead","TableLoader","initialNameValue","tableHeader","data","isLoaded","activeSortLabel","onSort","Object","keys","length","map","cell","index","elem"],"mappings":";AAAA,OAAOA,KAAP,MAA0B,OAA1B;AAEA,SACEC,cADF,EAEEC,KAAK,IAAIC,QAFX,EAGEC,QAHF,EAIEC,SAJF,EAKEC,SALF,QAMO,mBANP;AAOA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAASC,WAAT,QAA4B,eAA5B;AAYA,OAAO,MAAMN,KAAgB,GAAG,CAAC;AAC/BO,EAAAA,gBAAgB,GAAG,EADY;AAE/BC,EAAAA,WAF+B;AAG/BC,EAAAA,IAH+B;AAI/BC,EAAAA,QAJ+B;AAK/BC,EAAAA,eAL+B;AAM/BC,EAAAA;AAN+B,CAAD,kBAQ9B,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE,oBAAC,SAAD;AACE,EAAA,WAAW,EAAEJ,WADf;AAEE,EAAA,eAAe,EAAEG,eAFnB;AAGE,EAAA,gBAAgB,EAAEJ,gBAHpB;AAIE,EAAA,MAAM,EAAEK,MAJV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,eAOE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACG,CAACF,QAAD,gBACC,oBAAC,WAAD;AAAa,EAAA,WAAW,EAAEG,MAAM,CAACC,IAAP,CAAYN,WAAZ,EAAyBO,MAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADD,GAGCN,IAAI,CAACO,GAAL,CAAS,CAACC,IAAD,EAAOC,KAAP,KAAiB;AACxB,sBACE,oBAAC,QAAD;AAAU,IAAA,GAAG,EAAEA,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGL,MAAM,CAACC,IAAP,CAAYG,IAAZ,EAAkBD,GAAlB,CAAsB,CAACG,IAAD,EAAOD,KAAP,kBACrB,oBAAC,SAAD;AAAW,IAAA,GAAG,EAAEA,KAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAwBD,IAAI,CAACE,IAAD,CAA5B,CADD,CADH,CADF;AAOD,CARD,CAJJ,CAPF,CADF,CARK","sourcesContent":["import React, { FC } from 'react';\n\nimport {\n  TableContainer,\n  Table as TableMui,\n  TableRow,\n  TableCell,\n  TableBody\n} from '@material-ui/core';\nimport { TableHead } from './TableHead';\nimport { TableLoader } from './TableLoader';\n\ninterface Props {\n  tableHeader: Record<string, any>[];\n  data: TV.TVShow[];\n  isLoaded: boolean;\n  onSort: (value: TV.SortKey, direction: TV.SortDirection) => void;\n  activeSortLabel: TV.SortKey | null;\n\n  initialNameValue?: string;\n}\n\nexport const Table: FC<Props> = ({\n  initialNameValue = '',\n  tableHeader,\n  data,\n  isLoaded,\n  activeSortLabel,\n  onSort\n}: Props) => (\n  <TableContainer>\n    <TableMui>\n      <TableHead\n        tableHeader={tableHeader}\n        activeSortLabel={activeSortLabel}\n        initialNameValue={initialNameValue}\n        onSort={onSort}\n      />\n      <TableBody>\n        {!isLoaded ? (\n          <TableLoader columnCount={Object.keys(tableHeader).length} />\n        ) : (\n          data.map((cell, index) => {\n            return (\n              <TableRow key={index}>\n                {Object.keys(cell).map((elem, index) => (\n                  <TableCell key={index}>{cell[elem]}</TableCell>\n                ))}\n              </TableRow>\n            );\n          })\n        )}\n      </TableBody>\n    </TableMui>\n  </TableContainer>\n);\n"]},"metadata":{},"sourceType":"module"}